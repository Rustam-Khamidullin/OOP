package org.example;


public class Main {
    static void sift_up(int[] arr, int pos) {
        int parent = (pos + 1) / 2 - 1;
        if (pos != 0 && arr[parent] > arr[pos]) {
            int tmp = arr[pos];
            arr[pos] = arr[parent];
            arr[parent] = tmp;
            sift_up(arr, parent);
        }
    }

    static void sift_down(int[] arr, int pos, int len) {
        int child1 = pos * 2 + 1;
        int child2 = child1 + 1;
        int posMin = pos;

        if (child1 < len && arr[posMin] > arr[child1])
            posMin = child1;
        if (child2 < len && arr[posMin] > arr[child2])
            posMin = child2;

        if (posMin != pos) {
            int tmp = arr[pos];
            arr[pos] = arr[posMin];
            arr[posMin] = tmp;
            sift_down(arr, posMin, len);
        }
    }

    static int[] heapsort(int[] arr) {
        int len = arr.length;

        int[] res = new int[len];

        for (int i = 1; i < len; i++) {
            sift_up(arr, i);
        }

        for (int i = 0; i < len; i++) {
            int tmp = arr[0];
            res[i] = arr[0];
            arr[0] = arr[len - i - 1];
            arr[len - i - 1] = tmp;
            sift_down(arr, 0, len - i - 1);
        }

        return res;
    }


    public static void main(String[] args) {
        int[] arr = new int[]{213, 21341, 12, 23, 2345, 612, 3, 7, 3, 2, 435, 7, 34, 2, 26, 237, -2345, -2, -235, 0, 0, 0};
        int[] res = heapsort(arr);

        for (int i = 0; i < res.length; i++)
            System.out.println(res[i] + " " + arr[i]);


    }
}